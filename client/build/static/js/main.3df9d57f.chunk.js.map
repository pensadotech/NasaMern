{"version":3,"sources":["components/Header/Header.js","components/NavbarArticle/Navbar.js","components/NavbarNewArticle/Navbar.js","components/CardArticle/Card.js","pages/Articles/Articles.js","components/CardNewArticle/Card.js","pages/NewArticles/NewArticles.js","utils/API.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Fragment","className","src","alt","Component","Navbar","_this","this","type","data-toggle","data-target","id","href","onClick","props","handlePageChange","handleDeleteAllArticles","handleSearchNewArticles","handleClearScreen","Card","image","pubId","pubDate","title","description","url","target","value","handleDeleteArticle","Articles","articles","length","map","article","CardArticle_Card","key","handleSaveArticle","NewArticles","CardNewArticle_Card","API","getArticles","axios","get","getArticle","createUpdateArticle","post","deleteArticle","delete","deleteAllArticles","console","log","scrapArtilces","App","state","newarticles","currentPage","loadArticles","then","res","setState","data","catch","err","findArticleById","artPubId","articlesArr","tgtArticle","i","event","tgtarticles","_id","pos","indexOf","splice","page","renderPage","NavbarNewArticle_Navbar","pages_NewArticles_NewArticles","NavbarArticle_Navbar","pages_Articles_Articles","components_Header_Header","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3df9d57f.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\n\r\nclass Header extends Component {\r\n   \r\n  render() {\r\n\r\n    return (\r\n      <>\r\n       <header className=\"header\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n               <img src=\"./images/nasa1.png\" alt=\"NasaLogo\" />\r\n            </div>\r\n            <div className=\"col-md-3 headerLetters\">\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\"\r\n\r\nclass Navbar extends Component {\r\n   \r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <nav className=\"navbar navbar-expand-md bg-dark navbar-dark justify-content-end\">\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n             <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse justify-content-end\" id=\"collapsibleNavbar\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n               <li className=\"nav-item ml-auto\">\r\n                 <a className=\"nav-link\" \r\n                    href=\"#home\"\r\n                    onClick={() => this.props.handlePageChange(\"Home\")}>Home</a>\r\n               </li>\r\n               <li className=\"nav-item ml-auto\">\r\n                 <a className=\"nav-link\" \r\n                    href=\"#scrapearticles\"\r\n                    onClick={() => this.props.handlePageChange(\"Search\")}>Get Articles</a>\r\n               </li>\r\n               <li className=\"nav-item ml-auto\">\r\n                 <a className=\"btn btn-secondary\"\r\n                    onClick={() => this.props.handleDeleteAllArticles()}>Delete All Articles</a>\r\n               </li>\r\n            </ul>\r\n        </div>\r\n        </nav>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from \"react\"\r\n\r\nclass Navbar extends Component {\r\n   \r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <nav className=\"navbar navbar-expand-md bg-dark navbar-dark justify-content-end\">\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n             <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse justify-content-end\" id=\"collapsibleNavbar\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n               <li className=\"nav-item ml-auto\">\r\n                 <a className=\"nav-link\" href=\"#home\"\r\n                    onClick={() => this.props.handlePageChange(\"Home\")}>Home</a>\r\n               </li>              \r\n               <li className=\"nav-item ml-auto\">\r\n                 <a className=\"btn btn-secondary\" \r\n                    onClick={() => this.props.handleSearchNewArticles()}>Scrape Articles</a>\r\n               </li>\r\n               <li className=\"nav-item ml-auto\">\r\n                  <a className=\"btn btn-secondary\" \r\n                     onClick={() => this.props.handleClearScreen()}>Clear Screen</a>\r\n               </li>\r\n            </ul>\r\n        </div>\r\n        </nav>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar","import React, { Component } from \"react\"\r\n\r\nclass Card extends Component {\r\n   \r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <div className=\"card\">\r\n           <div className=\"row\">\r\n             <div className=\"col-md-4 px-3\">\r\n               <div className=\"card-image\">\r\n                 <img className=\"card-img-top imageShadow imgRnd10 articleImg\" src={this.props.image} />\r\n               </div> \r\n             </div>\r\n             <div className=\"col-md-8 px-3\"> \r\n                <div className=\"card-body\">\r\n                  <p> pubId: {this.props.pubId} / {this.props.pubDate}</p>\r\n                  <h5 className=\"card-title\">{this.props.title}</h5>\r\n                  <p> {this.props.description} </p> \r\n                  \r\n                  <div className=\"d-flex flex-row-reverse\">\r\n                     <a id=\"btnReadMore\" href={this.props.url} target=\"_blank\" className=\"btn btn-light\">Read more</a>\r\n                     <button id=\"btnDelete\" className=\"btn btn-secondary\" \r\n                           value={this.props.pubId}\r\n                           onClick={() => this.props.handleDeleteArticle(this.props.pubId)}>Delete Article</button>\r\n                  </div>\r\n               </div>\r\n             </div>\r\n           </div>\r\n         </div>\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Card;","import React, { Component } from \"react\"\r\nimport Card from '../../components/CardArticle'\r\n\r\nclass Articles extends Component {\r\n  \r\n  render() {\r\n    return(\r\n      <>\r\n        {this.props.articles.length ? (\r\n          <div className=\"container\">\r\n           <div id=\"articlesList\">\r\n             {this.props.articles.map(article => (           \r\n               <Card key={article.pubId}\r\n                     pubId={article.pubId} \r\n                     title={article.title}\r\n                     description={article.description}\r\n                     image={article.image}\r\n                     url={article.url}\r\n                     pubDate={article.pubDate} \r\n                     handleDeleteArticle={this.props.handleDeleteArticle}/>\r\n             ))}\r\n                        \r\n           </div>\r\n           </div>\r\n        ) : (\r\n           null\r\n        )}      \r\n      </>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Articles","import React, { Component } from \"react\"\r\n\r\nclass Card extends Component {\r\n   \r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <div className=\"card\">\r\n           <div className=\"row\">\r\n             <div className=\"col-md-4 px-3\">\r\n               <div className=\"card-image\">\r\n                 <img className=\"card-img-top imageShadow imgRnd10 articleImg\" src={this.props.image} />\r\n               </div> \r\n             </div>\r\n             <div className=\"col-md-8 px-3\"> \r\n                <div className=\"card-body\">\r\n                  <p> pubId: {this.props.pubId} / {this.props.pubDate}</p>\r\n                  <h5 className=\"card-title\">{this.props.title}</h5>\r\n                  <p> {this.props.description} </p> \r\n                  \r\n                  <div className=\"d-flex flex-row-reverse\">\r\n                     <a id=\"btnReadMore\" href={this.props.url} target=\"_blank\" className=\"btn btn-light\">Read more</a>\r\n                     <button id=\"btnSave\" className=\"btn btn-secondary\" \r\n                           value={this.props.pubId}\r\n                           onClick={() => this.props.handleSaveArticle(this.props.pubId)}>Save Article</button>\r\n                  </div>\r\n               </div>\r\n             </div>\r\n           </div>\r\n         </div>\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Card;","import React, { Component } from \"react\"\r\nimport Card from '../../components/CardNewArticle'\r\n\r\nclass NewArticles extends Component {\r\n  \r\n  render() {\r\n    return(\r\n      <>\r\n        {this.props.articles.length ? (\r\n          <div className=\"container\">\r\n           <div id=\"articlesList\">\r\n             {this.props.articles.map(article => (           \r\n               <Card key={article.pubId}\r\n                     pubId={article.pubId} \r\n                     title={article.title}\r\n                     description={article.description}\r\n                     image={article.image}\r\n                    url={article.url}\r\n                    pubDate={article.pubDate} \r\n                    handleSaveArticle={this.props.handleSaveArticle}/>\r\n             ))}\r\n                        \r\n           </div>\r\n           </div>\r\n        ) : (\r\n           null\r\n        )}      \r\n      </>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default NewArticles","import axios from \"axios\";\r\n\r\n// This utility make a bridge from React client and express routes for actions with DB or AJAX\r\n// The front end will have access to these functions that will invoke an express route\r\n// recognized by the main server routes\r\n\r\nexport default {\r\n  // Gets all Articles\r\n  getArticles: function () {\r\n    return axios.get('/api/articles')\r\n  },\r\n  // Gets the article with the given id\r\n  getArticle: function (id) {\r\n    return axios.get('/api/articles/' + id)\r\n  },\r\n  // create or update an article\r\n  createUpdateArticle: function (article) {\r\n    return axios.post('/api/articles',article)\r\n  },\r\n  // Deletes the articles with the given id\r\n  deleteArticle: function (id) {\r\n    return axios.delete('/api/articles/' + id)\r\n  },\r\n  // delete all saved articles\r\n  deleteAllArticles: function () {\r\n    console.log('deleteAllArticles')\r\n    return axios.delete('/api/deleteallarticles')\r\n  },\r\n  // get articles from NASA website\r\n  scrapArtilces: function () {\r\n    return axios.get('/api/scrapArtilces')\r\n  }\r\n\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\n// components\nimport Header from './components/Header'\nimport NavbarArticle from './components/NavbarArticle'\nimport NavbarNewArticle from './components/NavbarNewArticle'\nimport Articles from './pages/Articles'\nimport NewArticles from './pages/NewArticles'\n\n// API bridge fro express routes\nimport API from './utils/API'\n// Style\nimport './App.css'\n\nclass App extends Component {\n \n  state = {\n    articles: [],\n    newarticles: [],\n    currentPage : 'Home'\n  }\n\n  componentDidMount() {\n    this.loadArticles()\n  }\n\n  loadArticles = () => {\n      API.getArticles()\n      .then(res => {\n        // store artciles from DB in Array\n        this.setState({ articles: res.data })\n      })\n      .catch(err => console.log(err))\n  }\n\n findArticleById = (artPubId, articlesArr) => {\n    let tgtArticle = null\n    for (let i = 0; i < articlesArr.length; i++) {\n      let article = articlesArr[i]\n      if (article.pubId === artPubId) {\n        // found\n        tgtArticle = article\n        break\n      }\n    }\n    return tgtArticle\n  }\n\n  handleSearchNewArticles = event => {  \n    API.scrapArtilces()\n      .then(res => {\n        // Store new articles from ibternet in array\n        let tgtarticles = res.data\n        this.setState({ newarticles: tgtarticles })\n      })\n      .catch(err => console.log(err))\n  }\n\n  handleClearScreen = event =>  {\n     // Clear searched artilces\n     let tgtarticles = []\n     this.setState({ newarticles: tgtarticles })\n  }\n\n  handleDeleteAllArticles = event => {\n    // Delete all articles\n    API.deleteAllArticles()\n      .then(res => {\n        this.loadArticles()\n      })\n      .catch(err => console.log(err))\n  }\n\n  handleDeleteArticle = (artPubId) => {\n    // Retreive article from new-Articles array\n    let articlesArr = this.state.articles\n    let article = this.findArticleById(artPubId,articlesArr)   \n    // Delete article\n    API.deleteArticle(article._id)\n    .then(res => {\n      this.loadArticles()\n    })\n    .catch(err => console.log(err))\n  }\n\n  handleSaveArticle = (artPubId) => {\n    // Retreive article from new-Articles array\n    let articlesArr = this.state.newarticles\n    let article = this.findArticleById(artPubId,articlesArr)\n    // Store article in DB\n    API.createUpdateArticle(article)\n       .then(res => {\n        let pos = articlesArr.indexOf(article)\n        articlesArr.splice(pos,1)\n        this.setState({ newarticles: articlesArr })\n        this.loadArticles()\n      })\n      .catch(err => console.log(err))\n  }\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  renderPage = () => {\n    // Depending on selection present a navbar and the proper list of artciles\n    if (this.state.currentPage === \"Search\") {\n      // Scrape Artticles: Navbar and articles in memory\n      return (\n        <>\n          <NavbarNewArticle \n                handlePageChange={this.handlePageChange}\n                handleSearchNewArticles={this.handleSearchNewArticles}\n                handleClearScreen={this.handleClearScreen} />\n          <NewArticles \n                articles={this.state.newarticles}\n                handleSaveArticle={this.handleSaveArticle}/>\n  \n        </>\n      )\n    } else {\n      // Home : navbar and stored articles in DB\n      return (\n        <>\n          <NavbarArticle \n                 handlePageChange={this.handlePageChange}   \n                 handleDeleteAllArticles={this.handleDeleteAllArticles} />         \n          <Articles \n                 articles={this.state.articles} \n                 handleDeleteArticle={this.handleDeleteArticle}/>       \n        </>\n      )\n    }\n  }\n    \n  render() {\n    \n    return (\n      <>\n      <Header />  \n      {this.renderPage()}\n      </>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}